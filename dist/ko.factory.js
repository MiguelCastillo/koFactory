/**
 * koFactory Copyright (c) 2014 Miguel Castillo.
 * Licensed under MIT
 */

(function(e,t){typeof require=="function"&&typeof exports=="object"&&typeof module=="object"?module.exports=t(require("ko")):typeof define=="function"&&define.amd?define(["ko"],t):e.koFactory=t(e.ko)})(this,function(e){function n(e,t,r){return n.serialize(e,t,r)}var t=this.jQuery;return n.primitiveTypes={"undefined":!0,"boolean":!0,number:!0,string:!0},n.getType=function(e){if(e instanceof Array)return"array";var t=typeof e;if(n.primitiveTypes.hasOwnProperty(t))return"primitive";if(t==="object")return"object";throw"Invalid data type"},n.array=function(t,r,i){var s=0,o=t.length,u=!1,a=e.isObservable(r);i=i||{},o&&(u=n.getType(t[0]));for(;s<o;s++)t[s]=n[u](t[s],r,i);return a===!0?(r(t),r):e.observableArray(t)},n.primitive=function(t,n,r){var i=e.isObservable(n);return i===!0?(n(t),n):e.observable(t)},n.object=function(e,t,r){var i,s,o,u=!1;t=t||{},r=r||{};for(var a in e){if(e.hasOwnProperty(a)===!1)continue;u=t.hasOwnProperty(a),s=e[a],i=n.getType(s),o=n[i](s,t[a],r[a]),u===!1&&(t[a]=o)}return t},n.serialize=function(e,t,r){var i=n.getType(e);return n[i](e,t,r)},n.deserialize=function(t){return e.toJS(t)},n.bind=function(n,r){t?t(n).each(function(t,n){e.applyBindings(r,n)}):e.applyBindings(r,n)},n.unbind=function(n){t?t(n).each(function(t,n){e.cleanNode(n)}):e.cleanNode(n)},n.ko=e,n});